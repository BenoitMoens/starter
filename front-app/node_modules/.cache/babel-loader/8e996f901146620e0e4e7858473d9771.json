{"ast":null,"code":"var _jsxFileName = \"/home/wilder/workspace/starter-project/front-app/src/components/page/ClientSelected.js\";\nimport React from 'react';\nimport { BrowserRouter as Route, Link } from \"react-router-dom\";\n\nclass ClientSelected extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const target = event.target;\n      this.setState({\n        [target.name]: target.value\n      });\n    };\n\n    this.submited = () => {\n      this.setState({\n        isSubmit: true\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.submited();\n      const data = new FormData(event.target);\n      const email = data.get(\"email\");\n      const firstname = data.get(\"firstname\");\n      const lastname = data.get(\"lastname\");\n      const dataForm = {\n        firstname: firstname,\n        lastname: lastname,\n        email: email\n      };\n      const options = {\n        method: 'PUT',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        options: {\n          mode: 'no-cors'\n        },\n        body: JSON.stringify(dataForm)\n      };\n      const urlApi = \"http://localhost:5000/api/clients/\".concat(this.state.id);\n      fetch(urlApi, options).then(response => response.json()).then(res => this.setState({\n        \"flash\": res.flash\n      }), err => this.setState({\n        \"flash\": err.flash\n      }));\n    };\n\n    this.deleteClient = () => {\n      const options = {\n        method: 'DELETE'\n      };\n      const urlApi = \"http://localhost:5000/api/clients/\".concat(this.state.id);\n      fetch(urlApi, options).then(response => response.json());\n    };\n\n    this.state = {\n      id: '',\n      email: '',\n      fitstname: '',\n      lastname: '',\n      flash: {},\n      isSubmit: false\n    };\n  }\n\n  componentDidMount() {\n    let url = window.location.href;\n    var arrayURL = url.split(\"/\");\n    this.setState({\n      email: arrayURL[7],\n      lastname: arrayURL[6],\n      firstname: arrayURL[5],\n      id: arrayURL[4],\n      isSubmit: false\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"auth-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"auth-inner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Edit client\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"firstname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Firsname\"), React.createElement(\"input\", {\n      id: \"firstname\",\n      name: \"firstname\",\n      type: \"text\",\n      value: this.state.firstname,\n      className: \"form-control\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"lastname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Lastname\"), React.createElement(\"input\", {\n      id: \"lastname\",\n      name: \"lastname\",\n      type: \"text\",\n      className: \"form-control\",\n      value: this.state.lastname,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Email address\"), React.createElement(\"input\", {\n      id: \"email\",\n      name: \"email\",\n      type: \"email\",\n      className: \"form-control\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary btn-block\",\n      onClick: () => this.submited(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Save\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \" \"), React.createElement(Link, {\n      to: \"/clients\",\n      className: \"btn btn-primary btn-block\",\n      onClick: () => this.deleteClient(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Delete\"))));\n  }\n\n}\n\nexport default ClientSelected; // value={this.props.selectedClient[1]}","map":{"version":3,"sources":["/home/wilder/workspace/starter-project/front-app/src/components/page/ClientSelected.js"],"names":["React","BrowserRouter","Route","Link","ClientSelected","Component","constructor","props","handleChange","event","target","setState","name","value","submited","isSubmit","handleSubmit","preventDefault","data","FormData","email","get","firstname","lastname","dataForm","options","method","headers","mode","body","JSON","stringify","urlApi","state","id","fetch","then","response","json","res","flash","err","deleteClient","fitstname","componentDidMount","url","window","location","href","arrayURL","split","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { BrowserRouter as Route, Link} from \"react-router-dom\";\n\nclass ClientSelected extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id : '',\n      email : '',\n      fitstname : '',\n      lastname : '',\n      flash : {},\n      isSubmit : false\n    }\n\n  }\n\n  componentDidMount(){\n    let url = window.location.href;\n    var arrayURL = url.split(\"/\");\n    this.setState({\n      email : arrayURL[7],\n      lastname : arrayURL[6],\n      firstname : arrayURL[5],\n      id : arrayURL[4],\n      isSubmit : false\n    })\n  }\n\n\n  handleChange = (event) => {\n    const {target} = event;\n    this.setState({\n      [target.name] : target.value\n    })\n  }\n\n  submited = () => {\n    this.setState({\n      isSubmit : true\n    })\n  }\n\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.submited();\n    const data = new FormData(event.target);\n\n    const email = data.get(\"email\");\n    const firstname = data.get(\"firstname\");\n    const lastname = data.get(\"lastname\");\n\n    const dataForm = {\n      firstname : firstname,\n      lastname : lastname,\n      email : email\n    }\n\n    const options = {\n      method : 'PUT',\n      headers : {\n        'Accept' : 'application/json',\n        'Content-Type' : 'application/json'\n      },\n      options : {\n        mode : 'no-cors'\n      },\n      body : JSON.stringify(dataForm)\n    };\n\n    const urlApi = `http://localhost:5000/api/clients/${this.state.id}`;\n\n    fetch(urlApi, options)\n    .then(response  =>  response.json())\n    .then(\n        res  =>  this.setState({\"flash\":  res.flash}),\n        err  =>  this.setState({\"flash\":  err.flash})\n    )\n  }\n\n  deleteClient = () => {\n    const options = {\n      method : 'DELETE'\n    }\n    const urlApi = `http://localhost:5000/api/clients/${this.state.id}`;\n\n    fetch(urlApi, options)\n    .then(response  =>  response.json())\n  }\n\n  render(){\n    return (\n      <div className=\"auth-wrapper\">\n        <div className=\"auth-inner\">\n          <div>\n            <form onSubmit={this.handleSubmit}>\n                <h3>Edit client</h3>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"firstname\">Firsname</label>\n                    <input id=\"firstname\" name=\"firstname\" type=\"text\" value={this.state.firstname} className=\"form-control\" onChange={this.handleChange} />\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"lastname\">Lastname</label>\n                    <input id=\"lastname\" name=\"lastname\" type=\"text\" className=\"form-control\" value={this.state.lastname}  onChange={this.handleChange} />\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"email\">Email address</label>\n                    <input id=\"email\" name=\"email\" type=\"email\" className=\"form-control\" value={this.state.email}  onChange={this.handleChange} />\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-primary btn-block\" onClick={()=>this.submited()}>\n                    Save\n                </button>\n\n\n            </form>\n\n              <p> </p>\n              <Link to=\"/clients\" className=\"btn btn-primary btn-block\" onClick={() => this.deleteClient()}>\n                Delete\n              </Link>\n\n          </div>\n      </div>\n    </div>\n    )\n  }\n}\n\n\nexport default ClientSelected;\n// value={this.props.selectedClient[1]}\n"]},"metadata":{},"sourceType":"module"}