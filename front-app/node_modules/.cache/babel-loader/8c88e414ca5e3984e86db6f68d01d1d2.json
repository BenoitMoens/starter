{"ast":null,"code":"import _slicedToArray from \"/home/wilder/workspace/starter-project/front-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/wilder/workspace/starter-project/front-app/src/components/page/Contact.js\";\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport '../styles/style.css';\nimport { BrowserRouter as Route, Link } from \"react-router-dom\";\nconst useStyles = makeStyles({\n  root: {\n    width: '70%',\n    overflowX: 'auto'\n  },\n  table: {\n    minWidth: 150\n  }\n});\n\nfunction Contact() {\n  const classes = useStyles(); // const [flash, setFlash] = useState({});\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        clients = _useState2[0],\n        setClients = _useState2[1];\n\n  useEffect(() => {\n    getAll();\n  }, []);\n\n  const getAll = async () => {\n    const options = {\n      method: 'GET'\n    };\n    const urlApi = 'http://localhost:5000/api/clients';\n    await fetch(urlApi, options).then(response => response.json()).then(response => {\n      setClients(response);\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title-contact\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \" CONTACTS \"), React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    className: \"head-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Details\"), React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Firstname\"), React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Lastname\"), React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Email\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, clients.map((client, index) => React.createElement(TableRow, {\n    key: index,\n    className: \"rowSelected\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/clients/\".concat(client.id, \"/\").concat(client.firstname, \"/\").concat(client.lastname, \"/\").concat(client.email),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Edit\")), React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, client.firstname), React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, client.lastname), React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, client.email)))))));\n}\n\nexport default Contact; // {`/clients?id=${client.id}&firstname=${client.firstname}&lastname=${client.lastname}&email=${client.email}`}\n// const deleteAll = () => {\n//   const options = {\n//     method : 'DELETE',\n//   };\n//   const urlApi = 'http://localhost:5000/api/clients';\n//   fetch(urlApi, options)\n//   .then(res  =>  res.json())\n//   .then(\n//       res  =>  setFlash(res.flash),\n//       err  =>  setFlash(err.flash)\n//   )\n// }","map":{"version":3,"sources":["/home/wilder/workspace/starter-project/front-app/src/components/page/Contact.js"],"names":["React","useState","useEffect","makeStyles","Table","TableBody","TableCell","TableHead","TableRow","Paper","BrowserRouter","Route","Link","useStyles","root","width","overflowX","table","minWidth","Contact","classes","clients","setClients","getAll","options","method","urlApi","fetch","then","response","json","map","client","index","id","firstname","lastname","email"],"mappings":"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","sourcesContent":["import React, { useState, useEffect }  from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport '../styles/style.css';\nimport { BrowserRouter as Route, Link} from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: '70%',\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 150,\n  },\n});\n\n\nfunction Contact() {\n  const classes = useStyles();\n  // const [flash, setFlash] = useState({});\n  const [clients, setClients] = useState([]);\n  useEffect(() => {\n    getAll();\n}, []);\n\n\n  const getAll = async () => {\n    const options = {\n      method : 'GET',\n    };\n    const urlApi = 'http://localhost:5000/api/clients';\n    await fetch(urlApi, options)\n    .then(response => response.json())\n    .then(response => {\n      setClients(response);\n    })\n  }\n\n\n    return (\n      <div className=\"App-header\">\n        <h2 className=\"title-contact\"> CONTACTS </h2>\n        <Paper className={classes.root}>\n          <Table className={classes.table} aria-label=\"simple table\">\n\n            <TableHead>\n              <TableRow className=\"head-row\">\n                <TableCell align=\"center\">Details</TableCell>\n                <TableCell align=\"center\">Firstname</TableCell>\n                <TableCell align=\"center\">Lastname</TableCell>\n                <TableCell align=\"center\">Email</TableCell>\n              </TableRow>\n            </TableHead>\n\n            <TableBody>\n              {clients.map((client, index) => (\n                <TableRow key={index} className=\"rowSelected\">\n                  <TableCell align=\"center\">\n                    <Link to={`/clients/${client.id}/${client.firstname}/${client.lastname}/${client.email}`} >\n                      Edit\n                    </Link>\n                  </TableCell>\n                  <TableCell align=\"center\">{client.firstname}</TableCell>\n                  <TableCell align=\"center\">{client.lastname}</TableCell>\n                  <TableCell align=\"center\">{client.email}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n\n          </Table>\n        </Paper>\n\n      </div>\n    );\n  }\n\nexport default Contact;\n\n// {`/clients?id=${client.id}&firstname=${client.firstname}&lastname=${client.lastname}&email=${client.email}`}\n\n\n// const deleteAll = () => {\n//   const options = {\n//     method : 'DELETE',\n//   };\n//   const urlApi = 'http://localhost:5000/api/clients';\n//   fetch(urlApi, options)\n//   .then(res  =>  res.json())\n//   .then(\n//       res  =>  setFlash(res.flash),\n//       err  =>  setFlash(err.flash)\n//   )\n// }\n"]},"metadata":{},"sourceType":"module"}