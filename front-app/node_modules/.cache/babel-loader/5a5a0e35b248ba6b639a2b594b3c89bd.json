{"ast":null,"code":"import _slicedToArray from \"/home/wilder/workspace/starter-project/front-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/wilder/workspace/starter-project/front-app/src/components/page/Contact.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport '../styles/style.css';\nconst useStyles = makeStyles({\n  root: {\n    width: '70%',\n    overflowX: 'auto'\n  },\n  table: {\n    minWidth: 150\n  }\n});\n\nfunction Contact() {\n  const classes = useStyles(); // const [flash, setFlash] = useState({});\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        clients = _useState2[0],\n        setClients = _useState2[1]; // const deleteAll = () => {\n  //   const options = {\n  //     method : 'DELETE',\n  //   };\n  //   const urlApi = 'http://localhost:5000/api/clients';\n  //   fetch(urlApi, options)\n  //   .then(res  =>  res.json())\n  //   .then(\n  //       res  =>  setFlash(res.flash),\n  //       err  =>  setFlash(err.flash)\n  //   )\n  // }\n\n\n  const selectClient = (id, firstname, lastname, email) => {\n    let client = [];\n    client.push(id);\n    client.push(firstname);\n    client.push(lastname);\n    client.push(email);\n    this.props.selectedClient(client);\n  };\n\n  const getAll = async () => {\n    console.log(\"I m in getAll\");\n    const options = {\n      method: 'GET'\n    };\n    const urlApi = 'http://localhost:5000/api/clients';\n    await fetch(urlApi, options).then(response => response.json()).then(response => {\n      setClients(response);\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title-contact\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \" CONTACTS \"), React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    className: \"head-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Firstname\"), React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Lastname\"), React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Email\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, clients.map((client, index) => React.createElement(TableRow, {\n    key: index,\n    className: \"rowSelected\",\n    onClick: selectClient(client.id, client.firstname, client.lastname, client.email),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, client.firstname), React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, client.lastname), React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, client.email)))))), React.createElement(\"button\", {\n    className: \"getAll\",\n    onClick: () => getAll(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \" Show clients \"));\n}\n\nexport default Contact;","map":{"version":3,"sources":["/home/wilder/workspace/starter-project/front-app/src/components/page/Contact.js"],"names":["React","useState","makeStyles","Table","TableBody","TableCell","TableHead","TableRow","Paper","useStyles","root","width","overflowX","table","minWidth","Contact","classes","clients","setClients","selectClient","id","firstname","lastname","email","client","push","props","selectedClient","getAll","console","log","options","method","urlApi","fetch","then","response","json","map","index"],"mappings":"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","sourcesContent":["import React, { useState }  from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport '../styles/style.css'\n\nconst useStyles = makeStyles({\n  root: {\n    width: '70%',\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 150,\n  },\n});\n\n\nfunction Contact() {\n  const classes = useStyles();\n  // const [flash, setFlash] = useState({});\n  const [clients, setClients] = useState([]);\n\n\n  // const deleteAll = () => {\n  //   const options = {\n  //     method : 'DELETE',\n  //   };\n  //   const urlApi = 'http://localhost:5000/api/clients';\n  //   fetch(urlApi, options)\n  //   .then(res  =>  res.json())\n  //   .then(\n  //       res  =>  setFlash(res.flash),\n  //       err  =>  setFlash(err.flash)\n  //   )\n  // }\n\n  const selectClient = (id, firstname, lastname, email) =>{\n    let client = [];\n    client.push(id);\n    client.push(firstname);\n    client.push(lastname);\n    client.push(email);\n    this.props.selectedClient(client);\n  }\n\n  const getAll = async () => {\n    console.log(\"I m in getAll\");\n    const options = {\n      method : 'GET',\n    };\n    const urlApi = 'http://localhost:5000/api/clients';\n    await fetch(urlApi, options)\n    .then(response => response.json())\n    .then(response => {\n      setClients(response);\n    })\n  }\n\n\n    return (\n      <div className=\"App-header\">\n        <h2 className=\"title-contact\"> CONTACTS </h2>\n        <Paper className={classes.root}>\n          <Table className={classes.table} aria-label=\"simple table\">\n\n            <TableHead>\n              <TableRow className=\"head-row\">\n                <TableCell align=\"center\">Firstname</TableCell>\n                <TableCell align=\"center\">Lastname</TableCell>\n                <TableCell align=\"center\">Email</TableCell>\n              </TableRow>\n            </TableHead>\n\n            <TableBody>\n              {clients.map((client, index) => (\n                <TableRow key={index} className=\"rowSelected\" onClick={selectClient(client.id, client.firstname, client.lastname, client.email)}>\n                  <TableCell align=\"center\">{client.firstname}</TableCell>\n                  <TableCell align=\"center\">{client.lastname}</TableCell>\n                  <TableCell align=\"center\">{client.email}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n\n          </Table>\n        </Paper>\n\n        <button className=\"getAll\" onClick={() => getAll()}> Show clients </button>\n\n      </div>\n    );\n  }\n\nexport default Contact;\n"]},"metadata":{},"sourceType":"module"}